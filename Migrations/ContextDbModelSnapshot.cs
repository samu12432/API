// <auto-generated />
using System;
using API_REST_PROYECT.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_REST_PROYECT.Migrations
{
    [DbContext(typeof(ContextDb))]
    partial class ContextDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_REST_PROYECT.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CAE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RUTCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VencimientoCAE")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("API_REST_PROYECT.Models.InvoiceLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("CodigoProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceLine");
                });

            modelBuilder.Entity("API_REST_PROYECT.Models.Stock", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("stockCreate")
                        .HasColumnType("datetime2");

                    b.Property<int>("stockQuantity")
                        .HasColumnType("int");

                    b.Property<int>("stockSupplyidSupply")
                        .HasColumnType("int");

                    b.Property<DateTime>("stockUpdate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("stockSupplyidSupply");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("API_REST_PROYECT.Models.Supply", b =>
                {
                    b.Property<int>("idSupply")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idSupply"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("codeSupply")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descriptionSupply")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nameSupplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nameSupply")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("priceSupply")
                        .HasColumnType("float");

                    b.HasKey("idSupply");

                    b.ToTable("Supply");

                    b.HasDiscriminator().HasValue("Supply");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("API_REST_PROYECT.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("passwordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("passwordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API_REST_PROYECT.Models.Accessory", b =>
                {
                    b.HasBaseType("API_REST_PROYECT.Models.Supply");

                    b.Property<string>("descriptionAccessory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Supply");

                    b.HasDiscriminator().HasValue("Accessory");
                });

            modelBuilder.Entity("API_REST_PROYECT.Models.Glass", b =>
                {
                    b.HasBaseType("API_REST_PROYECT.Models.Supply");

                    b.Property<double>("glassLength")
                        .HasColumnType("float");

                    b.Property<double>("glassThickness")
                        .HasColumnType("float");

                    b.Property<int>("glassType")
                        .HasColumnType("int");

                    b.Property<double>("glassWidth")
                        .HasColumnType("float");

                    b.ToTable("Supply");

                    b.HasDiscriminator().HasValue("Glass");
                });

            modelBuilder.Entity("API_REST_PROYECT.Models.Profile", b =>
                {
                    b.HasBaseType("API_REST_PROYECT.Models.Supply");

                    b.Property<string>("profileColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("profileHeigth")
                        .HasColumnType("float");

                    b.Property<double>("profileWeigth")
                        .HasColumnType("float");

                    b.Property<double>("weigthMetro")
                        .HasColumnType("float");

                    b.ToTable("Supply");

                    b.HasDiscriminator().HasValue("Profile");
                });

            modelBuilder.Entity("API_REST_PROYECT.Models.InvoiceLine", b =>
                {
                    b.HasOne("API_REST_PROYECT.Models.Invoice", null)
                        .WithMany("Detalles")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("API_REST_PROYECT.Models.Stock", b =>
                {
                    b.HasOne("API_REST_PROYECT.Models.Supply", "stockSupply")
                        .WithMany()
                        .HasForeignKey("stockSupplyidSupply")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("stockSupply");
                });

            modelBuilder.Entity("API_REST_PROYECT.Models.Invoice", b =>
                {
                    b.Navigation("Detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
